# .github/workflows/sbom-cve.yml
name: SBOM & CVE Scan

# Запускаем на push в main и при открытии Pull Request в main
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  security-events: write

jobs:
  sbom-cve-scan:
    name: Generate SBOM and scan for vulnerabilities
    runs-on: ubuntu-latest

    steps:
      # 1) Чекаутим код
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Устанавливаем Trivy (через Action) и кладём бинарь в PATH
      - name: Install Trivy via Action
        uses: aquasecurity/trivy-action@master

      # 3) Генерируем SBOM (CycloneDX-JSON) командой trivy
      - name: Generate SBOM (CycloneDX-JSON) with Trivy
        run: |
          # trivy сам подтянет нужные зависимости и запишет sbom.json
          trivy sbom --format cyclonedx --output sbom.json .

      # 4) Сканируем получённый SBOM на уязвимости (HIGH, CRITICAL)
      - name: Scan SBOM for HIGH/CRITICAL vulnerabilities
        run: |
          # флаг --scanners vuln указывает, что проверяем только уязвимости
          trivy sbom --format table --scanners vuln --severity HIGH,CRITICAL sbom.json

      # 5) (Опционально) Загружаем отчёт SBOM и результат сканирования в артефакты
      - name: Upload sbom.json as artifact
        uses: actions/upload-artifact@v3
        with:
          name: sbom-json
          path: sbom.json

      - name: Upload vulnerability report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: tricvy-report.txt
        # Примечание: если вы хотите сохранить табличный отчёт, перенаправьте вывод предыдущей команды в файл:
        #   trivy sbom --format table --scanners vuln --severity HIGH,CRITICAL sbom.json > trivy-report.txt
