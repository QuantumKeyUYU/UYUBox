# .github/workflows/ci.yml
name: CI — lint / pytest / coverage / security & sign

permissions:
  actions: read
  contents: read
  security-events: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
# ────────────────────────────────────────────────────────────────────────────────
# 1) Линтеры (Black / Ruff / isort)
# ────────────────────────────────────────────────────────────────────────────────
  lint-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install black ruff isort

      - name: Black (check‑only)
        run: black --check src tests

      - name: Ruff (check‑only)
        run: ruff check src tests

      - name: isort (check‑only)
        run: isort --check-only src tests

# ────────────────────────────────────────────────────────────────────────────────
# 2) PyTest   (+ coverage upload)
# ────────────────────────────────────────────────────────────────────────────────
  pytest-coverage:
    needs: lint-format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.10", "3.11", "3.12", "3.13"]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install .

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings --quiet

      - uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python }}
          path: coverage.xml

      - uses: actions/upload-artifact@v4
        with:
          name: htmlcov-${{ matrix.python }}
          path: htmlcov

# ────────────────────────────────────────────────────────────────────────────────
# 3) Security + подпись артефактов Cosign
# ────────────────────────────────────────────────────────────────────────────────
  security-and-sign:
    needs: pytest-coverage
    runs-on: ubuntu-latest
    steps:
    # — Checkout + Python -------------------------------------------------------
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

    # — System tools ------------------------------------------------------------
      - name: Install Syft / Grype / Trivy + helpers
        run: |
          sudo apt-get update -y
          curl -sfL https://raw.githubusercontent.com/anchore/syft/main/install.sh   | sh -s -- -b /usr/local/bin
          curl -sfL https://raw.githubusercontent.com/anchore/grype/main/install.sh  | sh -s -- -b /usr/local/bin
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          python -m pip install --upgrade pip
          pip install reuse bandit semgrep

    # — SBOM & vuln scan --------------------------------------------------------
      - name: Generate SBOM (Syft)
        run: syft . -o cyclonedx-json=sbom.json

      - name: Scan SBOM with Grype (fail only on CRITICAL)
        run: grype sbom:sbom.json --fail-on critical

      - name: Save Grype report (always)
        if: always()
        run: grype sbom:sbom.json -o json > grype-report.json

      - name: Scan SBOM with Trivy (HIGH/CRITICAL)
        run: trivy sbom:sbom.json --format json --output trivy-report.json --severity HIGH,CRITICAL
        continue-on-error: true

    # — Licence & static analysis ----------------------------------------------
      - name: REUSE lint
        run: reuse lint || true

      - name: Bandit
        run: bandit -r src -f json -o bandit-report.json || true

      - name: Semgrep
        run: semgrep --config p/ci --sarif-output=semgrep-report.sarif || true

    # — CodeQL ------------------------------------------------------------------
      - name: CodeQL init
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: CodeQL autobuild
        uses: github/codeql-action/autobuild@v3

      - name: CodeQL analyze
        uses: github/codeql-action/analyze@v3

    # — Cosign key ----------------------------------------------------------------
      - name: Write Cosign private key (Base64 from secret)
        env:
          COSIGN_KEY_B64: ${{ secrets.COSIGN_KEY_B64 }}
        run: |
          mkdir -p ~/.cosign
          echo "$COSIGN_KEY_B64" | base64 -d > ~/.cosign/cosign.key
          chmod 600 ~/.cosign/cosign.key

      - name: Install Cosign
        run: |
          COSIGN_VERSION="v1.14.1"
          curl -sfL https://raw.githubusercontent.com/sigstore/cosign/main/install.sh \
            | sh -s -- -b /usr/local/bin "${COSIGN_VERSION}"
          cosign version

    # — Build & sign package ----------------------------------------------------
      - name: Install build tool
        run: |
          python -m pip install build

      - name: Build wheel & sdist
        run: python -m build --sdist --wheel --outdir dist

      - name: Sign artifacts with Cosign
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
        run: |
          for artifact in dist/*.{whl,tar.gz}; do
            cosign sign --key ~/.cosign/cosign.key "$artifact"
          done

    # — Upload artifacts --------------------------------------------------------
      - uses: actions/upload-artifact@v4
        with:
          name: sbom-json
          path: sbom.json

      - uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype-report.json

      - uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - uses: actions/upload-artifact@v4
        with:
          name: reuse-report
          path: .

      - uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

      - uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.sarif

      - uses: actions/upload-artifact@v4
        with:
          name: signed-python-packages
          path: |
            dist/*.whl
            dist/*.tar.gz
            dist/*.whl.sig
            dist/*.tar.gz.sig
