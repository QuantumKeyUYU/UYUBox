# .github/workflows/ci.yml

name: CI — lint/pytest/coverage/security

# Разрешения для CodeQL и security-events
permissions:
  actions: read
  contents: read
  security-events: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # ───────────────────────────────────────────────────────────────────────────
  # 1) Линт, форматирование, isort
  # ───────────────────────────────────────────────────────────────────────────
  lint-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12 (для линтеров)
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install linters
        run: |
          pip install black ruff isort

      - name: Black (check-only)
        run: |
          black --check src tests

      - name: Ruff (check-only)
        run: |
          ruff check src tests

      - name: isort (check-only)
        run: |
          isort --check-only src tests

  # ───────────────────────────────────────────────────────────────────────────
  # 2) Тесты + покрытие (pytest → upload coverage)
  # ───────────────────────────────────────────────────────────────────────────
  pytest-coverage:
    needs: lint-format
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.10', '3.11', '3.12', '3.13' ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          pip install -r requirements-dev.txt
          pip install .

      - name: Run pytest with coverage
        run: |
          pytest

      - name: Upload coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml-${{ matrix.python-version }}
          path: coverage.xml

      - name: Upload coverage HTML
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-${{ matrix.python-version }}
          path: htmlcov

  # ───────────────────────────────────────────────────────────────────────────
  # 3) Security checks: SBOM → Grype/Trivy, reuse-lint, Bandit, Semgrep, CodeQL
  # ───────────────────────────────────────────────────────────────────────────
  security-checks:
    needs: pytest-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13 (для security-утилит)
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # ─── 3.1 Устанавливаем системные зависимости и Python-утилиты ──────────────
      - name: Install system dependencies (Syft, Grype, Trivy) and Python tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl git unzip

          # Устанавливаем Syft (для генерации SBOM)
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh \
            | sh -s -- -b /usr/local/bin

          # Устанавливаем Grype (для сканирования SBOM)
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh \
            | sh -s -- -b /usr/local/bin

          # Устанавливаем Trivy (для дополнительного сканирования SBOM)
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sudo sh -s -- -b /usr/local/bin

          # Устанавливаем Python-утилиты: reuse (лицензии), bandit (security), semgrep (OSS rules)
          pip install reuse bandit semgrep

      # ─── 3.2 Генерация SBOM и скан на уязвимости ───────────────────────────────
      - name: Generate SBOM (Syft)
        run: |
          syft . -o cyclonedx-json=sbom.json

      - name: Scan SBOM with Grype (fail on high+critical severity)
        run: |
          grype sbom:sbom.json --fail-on high
        continue-on-error: true
        # — Если Grype найдёт «high» или «critical», этот шаг завершится с ошибкой, но весь job не упадёт (continue-on-error).

      - name: Save Grype report (JSON)
        run: |
          grype sbom:sbom.json -o json > grype-report.json || true

      - name: Scan SBOM with Trivy
        run: |
          trivy sbom --format json --output trivy-report.json sbom.json || true
        # — Trivy сканирует весь SBOM. «high/critical» уязвимости отразятся в trivy-report.json,
        #   но благодаря "|| true" шаг не провалит весь job.

      # ─── 3.3 Проверка лицензий REUSE (reuse-lint) ───────────────────────────────
      - name: REUSE lint (license compliance)
        run: |
          reuse lint > reuse-report.txt || true

      # ─── 3.4 Static analysis: Bandit, Semgrep ───────────────────────────────────
      - name: Bandit (security linter)
        run: |
          bandit -r src -f json -o bandit-report.json || true

      - name: Semgrep (OSS rules)
        run: |
          semgrep --config p/ci --sarif-output=semgrep-report.sarif || true

      # ─── 3.5 CodeQL analysis ───────────────────────────────────────────────────
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild CodeQL
        uses: github/codeql-action/autobuild@v3

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3

      # ─── 3.6 Загрузка артефактов security-отчетов ───────────────────────────────
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-json
          path: sbom.json

      - name: Upload Grype report
        uses: actions/upload-artifact@v4
        with:
          name: grype-report
          path: grype-report.json

      - name: Upload Trivy report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-report
          path: trivy-report.json

      - name: Upload REUSE report
        uses: actions/upload-artifact@v4
        with:
          name: reuse-report
          path: reuse-report.txt

      - name: Upload Bandit report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

      - name: Upload Semgrep SARIF
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep-report.sarif
