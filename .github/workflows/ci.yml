# .github/workflows/ci.yml
name: Stage 0: Paranoid CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.10'
  COSIGN_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
  COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
  SBOM_FILE: sbom.json

jobs:

  # ───────────────────────────────────────────────────────────────────────────────
  # Job 1: Линтеры → типизация → тесты → покрытие
  lint-and-test:
    name: "1. Lint, Typecheck & Tests"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies (dev)
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Run pre-commit hooks (black, ruff, isort, SPDX headers)
        run: pre-commit run --all-files

      - name: ruff lint
        run: ruff check src tests

      - name: black format check
        run: black --check src tests

      - name: isort import sort check
        run: isort --check-only --diff .

      - name: mypy type check
        run: mypy src

      - name: Run pytest with coverage
        run: |
          pytest --maxfail=1 --disable-warnings --cov=src --cov-report=xml --cov-report=html -q

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: |
            htmlcov/
            coverage.xml

  # ───────────────────────────────────────────────────────────────────────────────
  # Job 2: SBOM → Grype/Trivy
  sbom-and-scan:
    name: "2. Generate SBOM & CVE Scan"
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Syft
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM via Syft
        run: syft . -o cyclonedx-json=${{ env.SBOM_FILE }}

      - name: Upload SBOM JSON
        uses: actions/upload-artifact@v3
        with:
          name: sbom-json
          path: ${{ env.SBOM_FILE }}

      - name: Install Grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan SBOM with Grype (fail on medium+)
        run: |
          grype sbom:${{ env.SBOM_FILE }} --fail-on medium

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin

      - name: Scan SBOM with Trivy (fail on HIGH,CRITICAL)
        run: |
          trivy sbom ${SBOM_FILE} --severity HIGH,CRITICAL

      - name: Upload vulnerability reports
        uses: actions/upload-artifact@v3
        with:
          name: grype-report
          path: grype_report.json || true
      - name: Upload Trivy report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-report
          path: trivy-report.html || true

  # ───────────────────────────────────────────────────────────────────────────────
  # Job 3: REUSE-лицензии
  reuse-check:
    name: "3. REUSE License Check"
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install reuse tool
        run: pip install reuse

      - name: Run reuse lint
        run: reuse lint --ci

      - name: Upload REUSE report
        uses: actions/upload-artifact@v3
        with:
          name: reuse-report
          path: reuse-report.html || true

  # ───────────────────────────────────────────────────────────────────────────────
  # Job 4: Подпись артефактов Cosign’ом
  sign-artifacts:
    name: "4. Sign Artifacts with Cosign"
    runs-on: ubuntu-latest
    needs: [lint-and-test, sbom-and-scan, reuse-check]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build distribution packages
        run: |
          python -m pip install --upgrade build
          python -m build --sdist --wheel

      - name: Install Cosign CLI
        run: |
          curl -sSfL https://github.com/sigstore/cosign/releases/latest/download/cosign-linux-amd64 -o /usr/local/bin/cosign
          chmod +x /usr/local/bin/cosign

      - name: Import Cosign private key
        run: |
          mkdir -p ~/.cosign
          echo "${{ env.COSIGN_KEY }}" | base64 -d > ~/.cosign/cosign.key
          chmod 600 ~/.cosign/cosign.key

      - name: Sign all artifacts in dist/
        run: |
          for f in dist/*; do
            cosign sign \
              --key ~/.cosign/cosign.key \
              --password "${{ env.COSIGN_PASSWORD }}" \
              "$f"
          done

      - name: Verify Cosign signatures
        run: |
          for f in dist/*; do
            cosign verify --key ~/.cosign/cosign.pub "$f" || exit 1
          done

      - name: Upload signed artifacts
        uses: actions/upload-artifact@v3
        with:
          name: signed-artifacts
          path: dist/

  # ───────────────────────────────────────────────────────────────────────────────
  # Job 5: Статический анализ (CodeQL + Semgrep)
  static-analysis:
    name: "5. Static Analysis with CodeQL & Semgrep"
    runs-on: ubuntu-latest
    needs: [lint-and-test, sbom-and-scan, reuse-check]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Autobuild for CodeQL
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: "p/ci"

      - name: Upload Semgrep report
        uses: actions/upload-artifact@v3
        with:
          name: semgrep-report
          path: semgrep-report.sarif || true
