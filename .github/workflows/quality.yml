name: Quality / CI pipeline

on:
  push:
    branches: [ main, ci-check-ready ]
  pull_request:
    branches: [ main, ci-check-ready ]

jobs:
  #────────────────────────────── Lint + type + tests ──────────────────────────────
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set-up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dev-deps
        run: pip install -e .[dev]

      - name: Pre-commit
        run: pre-commit run --all-files

      - name: Ruff
        run: ruff check .

      - name: Black
        run: black --check .

      - name: isort
        run: isort --check-only .

      - name: Bandit
        run: bandit -r src -ll

      - name: Semgrep (SAST)
        run: semgrep ci

      - name: Mypy
        run: mypy --config-file mypy.ini src

      - name: Pytest
        run: ZILANT_ALLOW_ROOT=1 pytest -q

  #────────────────────────────── Perf subset ──────────────────────────────
  perf:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: pip install -e .[dev]
      - run: SKIP_FUZZ=1 ZILANT_ALLOW_ROOT=1 pytest -q -m perf --disable-warnings --maxfail=1

  #────────────────────────────── Large-file tests ──────────────────────────────
  large-file-test:
    needs: quality
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: pip install -e .[dev]
      - run: pytest -q tests/test_stream_large.py tests/test_stream_resume.py

  #────────────────────────────── CLI-polish tests ──────────────────────────────
  cli-polish:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - run: pip install -e .[dev]
      - run: pytest -q tests/test_cli_observability.py

  #────────────────────────────── Build docs ──────────────────────────────
  docs:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # 1) Python‐зависимости для Sphinx/Makefile
      - name: Install docs-deps
        run: pip install -e .[docs]

      # 2) Node + mermaid-cli
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
      - name: Install Mermaid-CLI
        run: npm install -g @mermaid-js/mermaid-cli

      # 3) Chrome deps для Puppeteer
      - name: Install Chrome system deps
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y \
            libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 \
            libxfixes3 libxi6 libxrandr2 libxtst6 libnss3 libatk1.0-0 \
            libgtk-3-0 libpangocairo-1.0-0

      # 4) Генерация диаграмм с --no-sandbox
      - name: Generate Mermaid diagrams
        run: |
          npx @mermaid-js/mermaid-cli --no-sandbox \
            -i docs/architecture/key_lifecycle.mmd \
            -o docs/_static/key_lifecycle.svg

      # 5) Сборка HTML-документации
      - name: Build docs
        working-directory: docs
        run: make html

  #────────────────────────────── Build + artefacts ──────────────────────────────
  build-pq:
    needs: [ quality, perf ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install build deps
        run: pip install -e .[dev] build pyyaml

      - name: Build wheels
        run: python tools/build_pq_wheels.py

      - uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

      # — далее шаги по Whitepaper и ISO SoA (как у тебя были) —
