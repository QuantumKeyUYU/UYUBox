name: zilant-ci

on:
  push:
    branches: [ main, ci-check-ready ]
  pull_request:
    branches: [ main, ci-check-ready ]

jobs:
  quality:
    name: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install -e .[dev]
      - run: pre-commit run --all-files
      - run: ruff check .
      - run: black --check .
      - run: isort --check-only .
      - run: bandit -r src -ll
      - run: semgrep ci
      - run: mypy --config-file mypy.ini src
      - run: pytest -q

  perf:
    name: perf
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - run: pip install -e .[dev]
      - run: pytest -q --maxfail=1 --disable-warnings -m perf

  build:
    name: build
    runs-on: ubuntu-latest
    needs: [ quality, perf ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Build PQ wheels
        run: python tools/build_pq_wheels.py

      - name: Upload PQ wheels
        uses: actions/upload-artifact@v4
        with:
          name: pq-wheels
          path: dist/*.whl

      - name: Install Pandoc & XeLaTeX
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex fonts-dejavu

      - name: Generate Whitepaper
        run: |
          mkdir -p dist
          pandoc docs/whitepaper.md \
            docs/ARCH.md \
            docs/THREATS.md \
            --metadata-file docs/whitepaper.yml \
            -o dist/whitepaper.pdf \
            --pdf-engine=xelatex \
            -V mainfont="DejaVu Serif" \
            -V monofont="DejaVu Sans Mono"

      - name: Upload Whitepaper
        uses: actions/upload-artifact@v4
        with:
          name: whitepaper
          path: dist/whitepaper.pdf

# Job "sign" отключён — добавьте свой скрипт подписи или удалите entirely
#  sign:
#    name: sign
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: '3.13'
#      - run: pip install -e .[dev]
#      - name: Sign artifacts
#        run: python tools/sign_artifacts.py
#      - uses: actions/upload-artifact@v4
#        with:
#          name: signed-artifacts
#          path: signed/*
