name: zilant-ci

on: [push, pull_request]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - run: pip install -e .[dev]
      - run: pre-commit run --all-files
      - run: ruff check .
      - run: black --check .
      - run: isort --check-only .
      - run: bandit -r src -ll
      - run: semgrep ci
      - run: mypy --strict src
      - run: pytest -q

  perf:
    needs: quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - run: pip install -e .[dev]
      - name: Run performance benchmarks
        run: pytest -q -m perf

  build:
    needs: [quality, perf]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
      - run: pip install -e .[dev]
      - name: Build PQ Wheels
        run: python tools/build_pq_wheels.py
      - name: Install Pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-latex-base
          pandoc --version
      - name: Generate Whitepaper
        run: python tools/gen_whitepaper.py
      - name: Generate ISO27001 SoA
        run: python tools/iso_soa_generator.py
      - name: Generate Threat Diagram
        run: python tools/gen_threat_diagram.py
      - uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: |
            whl/*.whl
            dist/whitepaper.pdf
            docs/SoA_ISO27001.md
            docs/threats.svg
            sbom.json

  sign:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: pip install syft cyclonedx-cli cosign
      - run: syft . -o cyclonedx-json=sbom.json
      - run: cosign sign --key ${{ secrets.COSIGN_KEY }} sbom.json
      - run: cosign sign --key ${{ secrets.COSIGN_KEY }} dist/whitepaper.pdf
      - run: cosign upload --key ${{ secrets.COSIGN_KEY }} dist/*.whl
